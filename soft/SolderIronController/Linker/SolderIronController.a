;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.04.4a Advanced
;Automatic Program Generator
;© Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : TWI Controlled Solder-Iron-Controller
;Version : 1
;Date    : 3/9/2015
;Author  : EdgarK
;Company : banana-electronics
;Comments:
;
;
;Chip type               : ATtiny2313
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Tiny
;External RAM size       : 0
;Data Stack size         : 32
;*****************************************************/
;
;#include <tiny2313.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x50
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_standby=0x40
;PCODE: $00000006 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000007 VOL: 0
	#endif
;PCODE: $00000008 VOL: 0
;PCODE: $00000009 VOL: 0
;
;// Pin change 0-7 interrupt service routine
;interrupt [PC_INT] void pin_change_isr0(void)
; 0000 001B {

	.CSEG
;PCODE: $0000000A VOL: 0
;PCODE: $0000000B VOL: 0
; 0000 001C // Place your code here
; 0000 001D 
; 0000 001E }
;PCODE: $0000000C VOL: 0
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 0023 {
;PCODE: $0000000F VOL: 0
; 0000 0024 // Declare your local variables here
; 0000 0025 
; 0000 0026 // Crystal Oscillator division factor: 1
; 0000 0027 #pragma optsize-
; 0000 0028 CLKPR=0x80;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0029 CLKPR=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 002A #ifdef _OPTIMIZE_SIZE_
; 0000 002B #pragma optsize+
; 0000 002C #endif
; 0000 002D 
; 0000 002E // Input/Output Ports initialization
; 0000 002F // Port A initialization
; 0000 0030 // Func2=In Func1=Out Func0=Out
; 0000 0031 // State2=T State1=0 State0=0
; 0000 0032 PORTA=0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0033 DDRA=0x03;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0034 
; 0000 0035 // Port B initialization
; 0000 0036 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=Out Func1=In Func0=In
; 0000 0037 // State7=T State6=P State5=T State4=P State3=P State2=0 State1=P State0=P
; 0000 0038 PORTB=0x5B;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0039 DDRB=0x04;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 003A 
; 0000 003B // Port D initialization
; 0000 003C // Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 003D // State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 003E PORTD=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 003F DDRD=0x7F;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0040 
; 0000 0041 // Timer/Counter 0 initialization
; 0000 0042 // Clock source: System Clock
; 0000 0043 // Clock value: 31.250 kHz
; 0000 0044 // Mode: Fast PWM top=FFh
; 0000 0045 // OC0A output: Non-Inverted PWM
; 0000 0046 // OC0B output: Non-Inverted PWM
; 0000 0047 TCCR0A=0xA3;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0048 TCCR0B=0x04;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0049 TCNT0=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 004A OCR0A=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 004B OCR0B=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 004C 
; 0000 004D // Timer/Counter 1 initialization
; 0000 004E // Clock source: System Clock
; 0000 004F // Clock value: Timer1 Stopped
; 0000 0050 // Mode: Normal top=FFFFh
; 0000 0051 // OC1A output: Discon.
; 0000 0052 // OC1B output: Discon.
; 0000 0053 // Noise Canceler: Off
; 0000 0054 // Input Capture on Falling Edge
; 0000 0055 // Timer1 Overflow Interrupt: Off
; 0000 0056 // Input Capture Interrupt: Off
; 0000 0057 // Compare A Match Interrupt: Off
; 0000 0058 // Compare B Match Interrupt: Off
; 0000 0059 TCCR1A=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 005A TCCR1B=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 005B TCNT1H=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 005C TCNT1L=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 005D ICR1H=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 005E ICR1L=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 005F OCR1AH=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0060 OCR1AL=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0061 OCR1BH=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0062 OCR1BL=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0063 
; 0000 0064 // External Interrupt(s) initialization
; 0000 0065 // INT0: Off
; 0000 0066 // INT1: Off
; 0000 0067 // Interrupt on any change on pins PCINT0-7: On
; 0000 0068 GIMSK=0x20;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0069 MCUCR=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 006A PCMSK=0x5B;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 006B EIFR=0x20;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 006C 
; 0000 006D // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 006E TIMSK=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 006F 
; 0000 0070 // Universal Serial Interface initialization
; 0000 0071 // Mode: Disabled
; 0000 0072 // Clock source: Register & Counter=no clk.
; 0000 0073 // USI Counter Overflow Interrupt: Off
; 0000 0074 USICR=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0075 
; 0000 0076 // Analog Comparator initialization
; 0000 0077 // Analog Comparator: Off
; 0000 0078 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0079 ACSR=0x80;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 007A 
; 0000 007B // Global enable interrupts
; 0000 007C #asm("sei")
;PCODE: $0000004C VOL: 0
	sei
;PCODE: $0000004D VOL: 0
; 0000 007D 
; 0000 007E while (1)
;PCODE: $0000004E VOL: 0
; 0000 007F       {
; 0000 0080       // Place your code here
; 0000 0081 
; 0000 0082       };
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0083 }
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
